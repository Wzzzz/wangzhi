//先做个了个插入单个值到二叉树的方法 递归完成
 public TreeNode insert(int x,TreeNode y)
    {
      if(y == null)
      y = new TreeNode(x);
      else if(x<y.val)
      y.left = insert(x,y.left);
      else if(x>y.val)
      y.right = insert(x,y.right);
      return y;
    }
//问题就是当连续插入的元素成为的树 并不是二叉查找树 因为数组从小到大排序 结果就是偏向一边
//中序遍历为严格递增数列==该树为BST.

//对于一个树ABCDEF
前序遍历，也叫先根遍历，遍历的顺序是，根，左子树，右子树
遍历结果：ABDECF
中序遍历，也叫中根遍历，顺序是 左子树，根，右子树
遍历结果：DBEAFC
后序遍历，也叫后根遍历，遍历顺序，左子树，右子树，根
遍历结果：DEBFCA
