Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9
to
     4
   /   \
  7     2
 / \   / \
9   6 3   1
//反转一个树  递归解决 从上往下 每个节点分别左右反转
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode invertTree(TreeNode root) {
         if(root == null)
         return null;
         invert(root);
         return root;
    }
    public void invert(TreeNode root) {
      TreeNode tmp = root.left;
      root.left = root.right;
      root.right = tmp;
      if(root.left!=null)
      invert(root.left);
      if(root.right!=null)
      invert(root.right);
    }
}

//别人思路 也是递归 但是更简单 左边递归的右边 右边递归左边
public class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root == null) return null;
        TreeNode tmp = root.left;
        root.left = invertTree(root.right);
        root.right = invertTree(tmp);
        return root;
    }
}
