Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
//帕斯卡三角
//下面一行的每个数由该元素上面左右两个数累加和
//行数随着numRows递增
//简单题 考虑上面左右相加即可 注意链表用法
public class Solution {
    public List<List<Integer>> generate(int numRows) {
      List<List<Integer>> res = new LinkedList<List<Integer>>();   
      List<Integer> list = new LinkedList<Integer>();
      List<Integer> list_tem = new LinkedList<Integer>();
      for(int i = 0;i<numRows;i++)
      {
        list_tem.add(1);  
        for(int n = 0;n<list.size()-1;n++)
        { 
         list_tem.add(list.get(n)+list.get(n+1));
        }
        if(i>0)
         {list_tem.add(1);}
        list = new LinkedList(list_tem);  //！！！这里必须new LinkedList定义  如果只是list = list_tem是无法改变list的值
        res.add(list);
        list_tem.clear();
      }
      return res; 
    }
}
