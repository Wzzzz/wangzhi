Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.
//求一个二叉树上是否有一条路径等于给出的sum  用递归解决 注意递归考虑这条路径一定走完 而不是走到一半就等于sum就返回了 
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if(root == null)
          return false;
        else if(root.val == sum && root.right == null && root.left == null)
          return true;
        else return  hasPathSum(root.right,sum-root.val)||hasPathSum(root.left,sum-root.val);
    }
}
