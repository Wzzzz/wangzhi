Reverse bits of a given 32 bits unsigned integer.

For example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).

Follow up:
If this function is called many times, how would you optimize it?
//反转一个32位二进制整数   比如000000000....001 ->10000...000000000
//同反转一个整数一样 从10进制变为二进制 不断将低位保存下来 且不断*2 即可 
public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
      int res = 0;
      for(int i = 0;i<32;i++)
      { res = (res<<1) + (n & 1);
        n = n>>1;
      } 
      return res;  
    }
}
