//Given a roman numeral, convert it to an integer.
//Input is guaranteed to be within the range from 1 to 3999.
//罗马数字转为整数
//了解相应规则 罗马数字共有7个，即I（1）、V（5）、X（10）、L（50）、C（100）、D（500和M（1000）
//重复数次：一个罗马数字重复几次，就表示这个数的几倍。
//右加左减：
//!!在较大的罗马数字的右边记上较小的罗马数字，表示大数字加小数字。
//!!在较大的罗马数字的左边记上较小的罗马数字，表示大数字减小数字。
//左减的数字有限制，仅限于I、X、C。比如45不可以写成VL，只能是XLV
//左减时不可跨越一个位数。比如，99不可以用IC（100 - 1）表示，而是用XCIX（[100 - 10] + [10 - 1]）表示。（等同于阿拉伯数字每位数字分别表示。）
//左减数字必须为一位，比如8写成VIII，而非IIX。
//右加数字不可连续超过三位，比如14写成XIV，而非XIIII。
//参考别人思路：从右往左判断  
public class Solution {
    public int romanToInt(String s) {
    
    int res = 0;
    int num = s.length();
    for(int i = num -1 ;i>=0 ;i--)
    {
    char c = s.charAt(i);    
    switch(c){
    case 'I' :if (res < 5)
              res++;
              else res--;
              break;
    case 'V' :if (res < 10)
              res = 5 + res;
              else res = res - 5;
              break;
    case 'X' :if (res < 50)
              res = 10 + res;
              else res = res - 10;
              break;
    case 'L' :if (res < 100)
              res = 50 + res;
              else res = res - 50;
              break;
    case 'C' :if (res < 500)
              res = 100 + res;
              else res = res - 100;
              break;
    case 'D' :if (res < 1000)
              res = 500 + res;
              else res = res - 500;
              break;
    case 'M' :res = 1000 + res;
              break;
    }
    }
    return res;
    }
}
 //注：switch(表达式)  case 值： 语句 break;.......
//罗马数字一般从高位到低位书写，从左向右阅读。
//若位于左边的数较大，则用左边的数加上右边的数；若位于左边的数较小，则用右边的数减去左边的数。
