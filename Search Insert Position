//Given a sorted array and a target value, return the index if the target is found.
//If not, return the index where it would be if it were inserted in order.
//You may assume no duplicates in the array.
//Here are few examples.
//[1,3,5,6], 5 → 2
//[1,3,5,6], 2 → 1
//[1,3,5,6], 7 → 4
//[1,3,5,6], 0 → 0
//简单题  给定一个数组 和一个数  如果这个数与数组中数值相同 则返回数组中这个数值的索引 
//如果与数组中数值不相同 等同与将数值按排序插入到数组 并返回相应索引 
public class Solution {
    public int searchInsert(int[] nums, int target) {
    int n = nums.length;
    int m = 0;
    int i = 0;
    if(n == 0)  //考虑数组为0的情况
    return 0;
    if(nums[0]==target || nums[0]>target)      
        return 0;
    if(n == 1)   //考虑数组为1的情况
    {if(nums[0]<target)    
        return 1;
     if(nums[0]>target)
        return 0;
    }       
    for(i = 1;i<n;i++)   //因为nums[i-1] 所以从数组为2开始
     {
        if(nums[i]==target)
         return i;
        if(nums[i-1]<target && nums[i]>target)
         return i;
     }
    return n;  循环最后如果仍没结束 返回最终长度
    }
  }
