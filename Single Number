Given an array of integers, every element appears twice except for one. Find that single one.
Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
//在一个数组中所有数值都出现两遍只有一个值出现一遍找出这一个值 运算结果为线性且不占用其他空间
//我的思路 直接排序 然后遍历一遍 找出那个与左右都不相同的数即是单一出现的数
public class Solution {
    public int singleNumber(int[] nums) {
     Arrays.sort(nums);
     int res = 0;
     if(nums.length == 1)
      return nums[0];
     if(nums[0] != nums[1])
      res = nums[0];
     if(nums[nums.length-1] != nums[nums.length-2])
      res = nums[nums.length-1];
     for(int i=1;i<nums.length-1;i++)
       { if(nums[i] != nums[i-1] && nums[i] != nums[i+1])
           {res = nums[i];
            break;}
       }
     return res; 
    }
}
