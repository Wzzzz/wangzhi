Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.
Please note that your returned answers (both index1 and index2) are not zero-based.
You may assume that each input would have exactly one solution and you may not use the same element twice.

Input: numbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2
//给一个排序数组（小到大）找出其中两个数值相加等于给定的target 并返回这两个数值的索引 且假定输入只有唯一值 且不能用同一个值两次
public class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int[] res = new int[2];
        for(int i = 0;i<numbers.length||numbers[i]>=target;i++)
        {
          for(int n = i+1;n<numbers.length;n++)
           { if(numbers[i]+numbers[n]==target)
            { res[0] = i+1;
              res[1] = n+1;
              return res;
            }
            if(numbers[i]+numbers[n]>target)
            break;
           }   
        } 
    return res;
    }
}
